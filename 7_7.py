# Задача 1. Кубы чисел
# Что нужно сделать
# В один из вечеров к Васе домой пришёл племянник и пожаловался на сложности с уроками математики: у
# него никак не получалось разобраться со степенями чисел. Вася решил помочь племяннику и написать программу,
# которая позволит наглядно увидеть возведение чисел в третью степень.
#
# Напишите программу, которая возводит в третью степень каждое число от 1 до N и выводит результат на экран.
from shutil import which

num = int(input('Введите число: '))
count_num = 0

while count_num < num:
    count_num += 1
    print(count_num, '** 3 =', count_num ** 3)


# Задача 2. Коллекторы
# Что нужно сделать
# Напишите робота для коллекторов. В самом начале он спрашивает имя должника и сумму долга, а затем начинает
# требовать у него погашения до тех пор, пока должник не введёт нужную сумму (равную сумме долга или больше).
# После погашения долга робот сообщает об этом пользователю и благодарит его.
name = input('Введите имя: ')
sum_debt = int(input('Введите сумму долга: '))
print(f'{name}, ваша задолженность составляет {sum_debt} рублей')

while True:
    debt = int(input('Сколько рублей вы внесёте прямо сейчас, чтобы её погасить? '))
    sum_debt -= debt
    if sum_debt > 0:
        print(f'Маловато, {name}. Давайте ещё раз.')
    else:
        break
print('Отлично, Василий! Вы погасили долг. Спасибо!')


# Задача 3. Слишком большие числа
# Что нужно сделать
# У неудачливого бухгалтера всё опять идёт наперекосяк: ему приносят такие большие счета, что числа не
# помещаются на бумаге.
#
# Напишите программу, которая считала бы для него, сколько цифр во вводимом числе. Обратите внимание, что число
# 0 имеет одну цифру.

number = int(input('Введите число: '))
count_num = 1

while number > 0:
    count_num += 1
    number //= 10

print('Количество цифр:', count_num)

# Задача 4. Поставьте оценку!
# Что нужно сделать
# Вася выложил своё новое приложение на платформу для начинающих разработчиков, на ней пользователи могут ставить
# оценку приложению: от −100 до 100. Ему захотелось сравнить количество положительных и отрицательных отзывов,
# для этого он заранее отфильтровал все отзывы так, чтобы в конце были те, которые равны нулю.
#
# Напишите программу, которая находит количество положительных и количество отрицательных чисел в последовательности.
# Последовательность заканчивается на числе 0.

number = int(input('Введите оценку: '))
count_positive = 0
count_negative = 0

while number != 0:
    if number > 0:
        count_positive += 1
    else:
        count_negative += 1
    number = int(input('Введите оценку: '))
print('Количество положительных отзывов: ', count_positive)
print('Количество отрицательных отзывов: ', count_negative)

# Задача 5. Обычный день на работе
# Что нужно сделать
# Максим программирует целый день на работе и вечером идёт домой. Каждый час начальство кидает ему несколько задач,
# которые нужно решить до следующего рабочего часа. Вдобавок каждый час Максиму звонит супруга. Он знает, что если
# он возьмёт трубку, то жена попросит зайти вечером в магазин.
#
# Напишите программу, в которой считается, сколько задач выполнил Максим за день (восемь часов). Если он хотя бы раз
# взял трубку, то в конце дополнительно выводите сообщение: «Нужно зайти в магазин».

count_hours = 0
print('Начался восьмичасовой рабочий день!')
total_tasks = 0
need_go_supermarket = False

while count_hours < 8:
    count_hours += 1
    print(f'{count_hours}-й час')
    count_tasks = int(input('Сколько задач решит Максим? '))
    total_tasks += count_tasks
    answer_call = int(input('Звонит жена. Взять трубку? (1 — да, 0 — нет):'))
    need_go_supermarket = need_go_supermarket or answer_call == 1

print('Выполнено заданий:', total_tasks)
if need_go_supermarket:
    print('Нужно зайти в магазин')

# Задача 6. Вклады
# Что нужно сделать
# Вклад в банке составляет X рублей. Ежегодно он увеличивается на P процентов, после чего дробная часть копеек
# отбрасывается. Определите, через сколько лет вклад составит не менее Y рублей.
#
# Напишите программу, которая по данным числам X, Y, P определяет, сколько лет пройдёт, прежде чем сумма достигнет
# значения Y.

X = int(input('Введите начальную сумму: '))
Y = int(input('Введите желаемую сумму: '))
P = int(input('Введите процентную ставку: '))
count_year = 0

while X < Y:
    X += X * P
    X = round(X, 0)
    count_year += 1

print('Срок -', count_year)


# Задача 7. Игра «Угадай число»
# Что нужно сделать
# В одной из практических работ мы делали задачу, где папа-программист написал для сына программу, которая просит
# его угадать число. Недостаток программы был в том, что бедному сыну приходилось её каждый раз перезапускать,
# чтобы угадывать число. Теперь, когда мы знаем гораздо больше, пришло время исправить этот недостаток и заодно
# немного улучшить саму игру.
# Напишите программу-игру, которая запрашивает у пользователя число до тех пор, пока он его не отгадает.
# Выводите сообщения в соответствии с примером.

number = int(input('Введите число: '))
count_attempt = 1
while number != 5:
    count_attempt += 1
    if number > 5:
        print('Число больше, чем нужно. Попробуйте ещё раз!')
    else:
        print('Число меньше, чем нужно. Попробуйте ещё раз!')
    number = int(input('Введите число: '))

print('Вы угадали! Число попыток:', count_attempt)


# Задача 8. Игра «Компьютер угадывает число»
# Что нужно сделать
# Поменяйте мальчика и компьютер из прошлой задачи местами. Теперь мальчик загадывает число между 1 и 100
# (включительно). Компьютер может спросить у мальчика: «Твоё число равно, меньше или больше, чем число N?»,
# где N — число, которое хочет проверить компьютер. Мальчик отвечает одним из трёх чисел: 1 — равно, 2 — больше,
# 3 — меньше.
#
# Напишите программу, которая с помощью цепочки таких вопросов и ответов мальчика угадывает число.
# Дополнительно: сделайте так, чтобы можно было гарантированно угадать число за семь попыток.
# Подсказка
# При желании найдите описание алгоритма бинарного поиска и попробуйте применить в этой задаче. Разбор подобного
# решения будет в следующем модуле.

number = (100 + 1) // 2
step = (100 + 1) // 2
while True:
    answer = int(input(f'Твоё число равно, меньше или больше, чем число {number}? '))
    step //= 2
    if answer == 1:
        print('Ура! Число отгадано!')
        break
    elif answer == 2:
        number += step
    elif answer == 3:
        number -= step

