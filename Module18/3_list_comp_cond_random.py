# Задача 1. Список чётных чисел
#
# Пользователь вводит два числа: А и В. Реализуйте код, который генерирует список из чётных чисел в диапазоне
# от А до B. Используйте list comprehensions (как и в следующих задачах).

import random

a = int(input('Введите A: '))
b = int(input('Введите B: '))

list_adds = [num for num in range(a, b + 1) if num % 2 == 0]

print(f'Список четных чисел от {a} до {b}: {list_adds}')

# Задача 2. Магазин
# У нас есть вот такой список цен на некоторые товары из магазина:
#
# original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
#
# В этом списке также хранятся цены на товары, которые уже давно не продаются. По какой-то причине система, вместо
# того чтобы их занулить, просто приписала к ним минус. Нам нужно это исправить.
#
# Напишите программу, которая генерирует новый список из первого списка, заменяя все отрицательные числа на ноль.
# Результат:
#
# [1.25, 0, 10.22, 3.78, 0, 1.16]
print()

original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]

new_prices = [(x if x > 0 else 0) for x in original_prices]
print(new_prices)

# Задача 3. Отряды
#
# Мы продолжаем пробовать себя в качестве разработчика игр. Теперь нужно написать небольшую логику поведения
# некоторых отрядов, а также их урон. Есть два отряда, в каждом по 10 монстров. В первом отряде у каждого
# монстра урон абсолютно случайный и колеблется от 50 до 80, а во втором — от 30 до 60. Оба отряда вместе
# напали на третий, также из 10 юнитов. Юнит третьего отряда погибает, если сумма урона от двух монстров больше 100.
#
# Напишите программу, которая генерирует случайные значения в первых двух списках в заданных диапазонах,
# а также генерирует список, состоящий из фраз «Погиб» или «Выжил». Выведите все списки на экран.

damage_first_group = [random.randint(50, 80) for _ in range(10)]
damage_second_group = [random.randint(30, 60) for _ in range(10)]

state_third_group = [('Погиб' if damage_first_group[i_damage] + damage_second_group[i_damage] > 100
                      else 'Выжил')
                     for i_damage in range(10)]

print(f'\nУрон первого отряда: {damage_first_group}')
print(f'Урон первого отряда: {damage_second_group}')
print((f'Состояние третьего отряда: {state_third_group}'))