# Задача 1. Космическая еда
# Что нужно сделать
# Ваш космический корабль потерпел крушение на пустынной планете. Еда здесь не растёт, но вы спасли из обломков
# 100-килограммовый мешок гречки. Из прошлого опыта вы знаете, что если будете экономно питаться, то у вас будет
# уходить по четыре килограмма гречки в месяц.
#
# Чтобы прикинуть гречневый бюджет, вы решили написать программу, которая выведет информацию о том, сколько килограммов
# гречки у вас должно быть в запасе через месяц, два и так далее, пока она не закончится. Используйте цикл for.
from tarfile import fully_trusted_filter

month = 0

for count in range(100, 0, -4):
    print('Через', month, 'месяцев должно быть в запасе', count, 'килограммов(-а) гречки')
    month += 1


# Задача 2. Долги
# Что нужно сделать
# «МирПрогБанк» наконец-то разделил законопослушных граждан и должников и поместил их в разные базы. Но банк не
# торопится сильно давить на неплательщиков. Операторам банка дали задание позвонить каждому пятому должнику из
# списка (нумерация начинается с нуля) и уточнить, какую сумму каждый из них задолжал банку.
#
# Напишите программу, которая получает данные о количестве должников, а затем спрашивает у каждого пятого (начиная
# с нуля) его долг. В конце выводится общая сумма долгов.

count_debts = int(input('Количество должников: '))
full_sum_debts = 0

for debt in range(0, count_debts, 5):
    print('Должник с номером:', debt)
    sum_debts = int(input('Введите сумму долгов: '))
    full_sum_debts += sum_debts
print('Полная сумма долгов:', full_sum_debts)

# Задача 3. Микроволновка
# Что нужно сделать
# Мы разрабатываем микропрограмму — таймер обратного отсчета для микроволновых печей. Некоторым пользователям
# не нравится пищащий звук.
#
# Есть задача убрать звук по готовности и заменить его сообщением на LED-экране. В нашем случае будем выводить в
# консоль сообщение с обратным отсчетом в секундах от “reverse_timer” до момента готовности, то есть «0» секунд,
# и спрашивать пользователя, готов ли он забрать еду.
#
# Пользователь в любой момент может прервать режим разогрева, введя «1» (то есть ответить «Да, еда готова»),
# тогда программа выводит на экран сообщение «Ваша еда готова, можете забрать» и показывает, на какой секунде
# был прерван таймер.
#
# Если пользователь отвечает «0», что равноценно «Нет», то таймер уменьшается. Когда он достигнет «0» секунд,
# выводим сообщение «Ваша еда готова, осторожно горячo!»
#
# В данном задании используем цикл for.
#
# “reverse_timer” – переменная счетчик, значение которой запрашиваем у пользователя через функцию ввода input.
#
# Задайте время до обнуления таймера.
# Используйте цикл for.
# На каждой итерации задавайте персонажу вопрос, хочет ли он сейчас остановить разогрев или нет.

reverse_timer = int(input('Время работы: '))
ready = 0

for t in range(reverse_timer, 0, -1):
    ready = int(input('Вы готовы забрать еду? '))
    if ready == 1:
        break
if ready == 1:
    print('Ваша еда готова, можете забрать')
else:
    print('Ваша еда готова, осторожно горячo!')

# Задача 4. Среднее на отрезке
# Что нужно сделать
# Напишите программу, которая считывает с клавиатуры три числа a, b и c, считает и выводит на консоль среднее
# арифметическое всех чисел из отрезка [a; b], кратных числу c.
# Рекомендации
# Функция range(start, stop) не включает границу stop, останавливается, не доходя до неё.

a = int(input('Введите a: '))
b = int(input('Введите b: '))
c = int(input('Введите c: '))
full_sum = 0
count_sum = 0

for n in range(a, b + 1):
    if n % c == 0:
        full_sum += n
        count_sum += 1
print(f'среднее арифметическое всех чисел из отрезка [{a}; {b}], кратных числу {c} равна {full_sum / count_sum}')


# Задача 5. Функция
# Что нужно сделать
# Перед изучением функций из программирования Саша решил оживить свои знания о функциях математики. Помогите Саше
# написать программу, которая будет считать значение функции в каждой точке отрезка с нужным шагом, начиная с конца).
#
# Напишите программу, которая получает на вход начало и конец отрезка, а также шаг (отрицательный), а затем высчитывает
# функцию y в каждой точке отрезка и выводит ответ на экран с нужным шагом, начиная с конца.

begin = int(input('введите начало отрезка: '))
end = int(input('введите конец отрезка: '))
step = int(input('введите шаг: '))
for point in range(end, begin - 1, step):
    print(f'в точке {point} функция равна {point ** 3 + 2 * point ** 2 - 4 * point + 1}')


# Задача 6. Стипендия
# Что нужно сделать
# Ежемесячная стипендия студента составляет educational_grant рублей, а расходы на проживание превышают стипендию и
# составляют expenses рублей в месяц.
#
# Рост цен ежемесячно увеличивает расходы на 3%, кроме первого месяца. Обратите внимание, что каждый месяц цены
# увеличиваются на 3% относительного прошлого месяца.
#
# Составьте программу расчёта суммы денег, которую необходимо получить у родителей один раз в начале обучения, чтобы
# можно было прожить учебный год (десять месяцев), используя только эти деньги и стипендию.

educational_grant = int(input('Введите размер степендии: '))
expenses = int(input('Введите расходы на проживание: '))
needs_from_parents = 0
for month in range(1, 11):
    needs_from_parents += expenses - educational_grant
    print(f'{month}. месяц траты {expenses :.2f} не хватает {needs_from_parents :.2f}')
    expenses += expenses * 0.03
print(f'Нужно попросить у родителей {needs_from_parents:.2f} рублей')

# Задача 7. Сумма ряда
# Что нужно сделать
# Дано натуральное число N. Напишите программу для вычисления суммы N элементов последовательности по формуле
# , где n — это порядковый номер элемента (расчёт начинается с нуля).
number = int(input('Введите число: '))
summ_elem = 0
for n in range(number):
    elem = (-1) ** n * (1 / 2 ** n)
    summ_elem += elem
print(f'сумма равна: {summ_elem}')


# Задача 8. Кинотеатр
# Что нужно сделать
# X мальчиков и Y девочек пошли в кинотеатр и купили билеты на идущие подряд места в одном ряду. Напишите программу,
# которая выдаст, как нужно сесть мальчикам и девочкам, чтобы рядом с каждым мальчиком сидела хотя бы одна девочка,
# а рядом с каждой девочкой — хотя бы один мальчик.
#
# На вход подаются два числа: количество мальчиков X и количество девочек Y. В ответе выведите какую-нибудь строку,
# в которой будет ровно X символов B, обозначающих мальчиков, и Y символов G, обозначающих девочек, удовлетворяющую
# условию задачи. Пробелы между символами выводить не нужно. Если рассадить мальчиков и девочек согласно условию
# задачи невозможно, выведите строку «Нет решения».

boys = int(input('введите количество мальчиков: '))
girls = int(input('введите количество девочек: '))
line = ''
if (boys > 2 * girls) or (girls > 2 * boys):
    print('Нет решения')
elif boys >= girls:
    k = boys - girls
    for bgb in range(k):
        line += 'BGB'
    for bg in range(girls - k):
        line += 'BG'
else:
    k = girls - boys
    for gbg in range(k):
        line += 'GBG'
    for gb in range(boys - k):
        line += 'GB'
