# Задача 1. Должники
# Что нужно сделать
# В базе банка хранятся данные и должников, и законопослушных граждан. Каждому человеку система присваивает свой номер.
# У нас есть случайная выборка из десяти номеров. Правда, иногда база глючит и выдаёт номер с отрицательным значением.
# А ещё по статистике, которую собрал наш «МирПрогБанк», каждый второй пользователь брал кредит и не выплатил его
# вовремя, то есть является должником.
# Напишите программу, которая при вводе десяти чисел определяет, сколько из них являются одновременно чётными
# и положительными.
countPositiveEven = 0
for _ in range(10):
    number = int(input('введите число: '))
    if number % 2 == 0 and number >= 0:
        countPositiveEven += 1

print(f'Количество четных и положительных чисел: {countPositiveEven}')

# Задача 2. Посчитай чужую зарплату...
# Что нужно сделать
# Бухгалтер устала постоянно считать вручную среднегодовую зарплату сотрудников компании и, чтобы облегчить
# себе жизнь, обратилась к программисту.
#
# Напишите программу, которая принимает от пользователя зарплату сотрудника за каждый из 12 месяцев и выводит
# на экран среднюю зарплату за год.

total_salary = 0

for month in range(12):
    month_salary = int(input(f'Введите зарплату за {month + 1}-й месяц'))
    total_salary += month_salary
print('Средняя зарплата за год -', total_salary // 12)

# Задача 3. Факториал
# Что нужно сделать
# Мы всё ближе и ближе подбираемся к серьёзной математике. Одна из классических задач — задача на нахождение
# факториала числа. И в будущем мы с ней ещё встретимся.
#
# Дано натуральное число n. Напишите программу, которая находит n! (n-факториал).
#
# Запись n! означает следующее:
#
# n! = 1 * 2 * 3 * 4 * 5 * … * n

number_n = int(input('Введите число: '))
factorial_n = 1
for number in range(2, number_n + 1):
    factorial_n *= number
print(f'Факториал числа {number_n} равен {factorial_n}')

# Задача 4. Успеваемость в классе
# Что нужно сделать
# В классе N человек. Каждый из них получил за урок по информатике оценку: 3, 4 или 5, двоек сегодня не было.
# Напишите программу, которая получает список оценок — N чисел — и выводит на экран сообщение о том, кого сегодня
# больше: отличников, хорошистов или троечников.
#
# Замечание: можно предположить, что количество отличников, хорошистов, троечников различно.

count_person = int(input('Введите кол-во человек в классе: '))
count_three = 0
count_four = 0
count_five = 0

for _ in range(count_person):
    grade = int(input('Введите оценку: '))
    if grade == 5:
        count_five += 1
    elif grade == 4:
        count_four += 1
    elif grade == 3:
        count_three += 1

if count_five > count_four and count_five > count_three:
    print('Количество отличников больше')
elif count_four > count_five and count_four > count_three:
    print('Количество хорошистов больше')
elif count_three > count_five and count_three > count_four:
    print('Количество троешников больше')


# Задача 5. Отрезок
# Что нужно сделать
# Напишите программу, которая считывает с клавиатуры два числа: a и b, — считает и выводит в консоль среднее
# арифметическое всех чисел из отрезка [a; b], кратных числу 3.
begin_number = int(input('Введите начало отрезка: '))
end_number = int(input('Введите конец отрезка: '))
total_sum = 0
total_number = 0

for number in range(begin_number, end_number + 1):
    if number % 3 == 0:
        total_sum += number
        total_number += 1
print(f'Среднее арифметическое всех чисел, которые делятся на три на отрезки от {begin_number} до {end_number} равна {total_sum // total_number}')


# Задача 6. Замечательные числа
# Что нужно сделать
# Напишите программу, которая находит и выводит все двузначные числа, равные утроенному произведению своих цифр.
# К таким относятся, например, 15 и 24.
for number in range(10, 100):
    tree_add_number = (number // 10) * (number % 10) * 3
    if tree_add_number == number:
        print(number)


# Задача 7. Пропавшая карточка
# Что нужно сделать
# Для настольной игры используются карточки с номерами от 1 до N. Одна карточка потерялась. Напишите программу,
# которая поможет найти потерянную карточку, если номера оставшихся известны. Найдите её, зная номера оставшихся карточек.
# Введите число карточек — N.
# Затем введите N − 1 номера оставшихся карточек. Они могут быть введены в любом порядке.

count_cart = int(input('Введите число карточек: '))
summ_all_cart = 0

for cart in range(1, count_cart + 1):
    summ_all_cart += cart

for _ in range(count_cart - 1):
    stay_cart = int(input('введите номер оставшейся карточки: '))
    summ_all_cart -= stay_cart
print('Номер потерявшейся карточки:', summ_all_cart)