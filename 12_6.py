# Задача 1. Конвертация
# Что нужно сделать
# При покупках за рубежом с помощью карты банки производят конвертацию через промежуточную валюту. Например, если
# купить что-то в евро, то сначала эта сумма конвертируется в доллары, а уже потом — в рубли.
#
# Напишите программу, которая получает на вход стоимость покупки в евро, а затем выводит ответ в рублях. Мы живём в
# альтернативной реальности, где 1 евро = 1,25 доллара, а 1 доллар = 60,87 рублей.
import math

euro = float(input('Введите сумму в евро: '))
dollar = euro * 1.25
ruble = dollar * 60.87

print(f'Стоимость в рублях: {ruble}')

# Задача 2. Грубая математика
# Что нужно сделать
# В одном центре математического анализа работал практикант, который написал программу для расчёта некоторых
# функций. Правда, он в тот день очень устал и немного не так прочитал техническое задание, поэтому функции
# теперь рассчитываются довольно грубо.
#
# Программа работает следующим образом: вводится последовательность из N вещественных чисел. При этом положительные
# числа округляются вверх, отрицательные округляются вниз. Напишите программу, которая выводит натуральный
# логарифм от числа, если оно положительное, и экспоненту в степени числа, если оно отрицательное.
import math

count = int(input('Введите количество чисел: '))

for _ in range(count):
    number = float(input('Введите число: '))
    if number > 0:
        print(f'x = {math.ceil(number)} log(x) = {math.log(number)}')
    else:
        print(f'x = {math.floor(number)} exp(x) = {math.exp(number)}')


# Задача 3. Убийца Steam
# Что нужно сделать
# Вы пишете программу-инсталлятор для компьютерной игры. Пока инсталлятор скачивает обновление, пользователю нужно
# показать, сколько процентов уже скачалось, чтобы он мог решить: пойти заварить чаю или подождать у экрана компьютера.
# Обновления игры всегда занимают разное количество мегабайт, да и скорость интернет-соединения у игроков разная.
#
# Напишите программу, принимающую на вход размер файла обновления в мегабайтах и скорость интернет-соединения в
# мегабайтах в секунду. Для каждой секунды программа рассчитывает и выводит на экран, сколько процентов от всего
# объёма уже скачано, до тех пор, пока не будет скачан весь объём. В конце программа должна показать, сколько
# всего секунд заняло скачивание обновления. Обеспечьте контроль ввода.
file = int(input('Укажите размер файла для скачивания: '))
speed = int(input('Скорость интернета: '))

if file > 0 or speed > 0:
    second = 0
    file_ready = 0
    while file > file_ready:
        second += 1
        file_ready += speed
        if file_ready > file:
            file_ready = file
        print(f'Прошло {second} сек. Скачано {file_ready} из {file} Мб ({int(file / file_ready / 100)}%)')

else:
    print('Размер файла или скорость не могут быть меньше или равны 0')

# Задача 4. Первая цифра
# Что нужно сделать
# Дано положительное действительное число X. Выведите его первую цифру после десятичной точки. При решении этой
# задачи нельзя пользоваться условной инструкцией, циклом или строками.
number = float(input('Введите число: '))
first_number = int(number * 10) % 10
print(f'Первое число после запятой {first_number}')

# Задача 5. Вот это объёмы!
# Что нужно сделать
# Для курсовой работы по физике Андрею нужно сравнить объёмы двух планет: Земли и какой-нибудь случайной, которая
# может в теории существовать в нашей Вселенной. Андрей хорошо разбирается в формулах, но вот считать что-то, а уж
# тем более самому — это явно не его. Объём Земли ему известен заранее — это 1.08321 * 10 ** 12 км3.

# Напишите программу, которая получает на вход радиус случайной планеты и выводит на экран, во сколько раз планета
# Земля меньше или больше по объёму. Ответ округлите до трёх знаков после запятой.

radius = float(input('Введите радиус случайной планеты: '))
volume_other = 4 / 3 * math.pi * radius ** 3
volume_earth = 1.08321 * 10 ** 12
difference = volume_earth / volume_other
if difference < 1:
    print(f'Объём планеты Земля меньше в (1/{round(difference, 3)}) = {round(1 / difference, 3)} раз')
else:
    print(f'Объём планеты Земля больше в {round(difference, 3)} раз')

# Задача 6. Метеостанция
# Что нужно сделать
# Сотрудники международной метеостанции каждый день передают показания — температуру в градусах по шкалам и Цельсия,
# и Фаренгейта. Напишите программу, которая принимает на вход три целых числа в градусах Цельсия: нижняя граница
# температуры, верхняя граница температуры и шаг. Программа выводит на экран таблицу соответствия градусов Цельсия
# градусам Фаренгейта от нижней до верхней границы с указанным шагом. Обеспечьте контроль ввода. Верхняя граница
# должна печататься, даже если последний шаг «перепрыгнул» её. Известно, что 0℃ соответствует 32℉, а каждый
# градус Цельсия эквивалентен 1,8 градусам Фаренгейта.
lower_limit = int(input('Нижняя граница: '))
upper_limit = int(input('Верхняя граница: '))
step = int(input('Шаг: '))
if lower_limit < upper_limit or step > 0:
    temp_temp = lower_limit
    print('C   F')
    while temp_temp < upper_limit:
        print(temp_temp, 32 + int(temp_temp * 1.8))
        temp_temp += step
        if temp_temp > upper_limit:
            temp_temp = upper_limit
    print(temp_temp, 32 + int(temp_temp * 1.8))
else:
    print('Нижняя граница не может быть больше верхней и шаг не может быть отрицательным')

# Задача 7. Ход конём
# Что нужно сделать
# В рамках разработки шахматного ИИ стоит новая задача. По заданным вещественным координатам коня и второй
# точки программа должна определить, может ли конь ходить в эту точку. Используйте как можно меньше конструкций
# if и логических операторов. Обеспечьте контроль ввода.
import math
print('Введите местоположение коня:')
xHorse = float(input())
yHorse = float(input())
print('Введите местоположение точки на доске: ')
xPoint = float(input())
yPoint = float(input())
if 0 < xHorse < 0.8 or 0 < yHorse < 0.8 or 0 < xPoint < 0.8 or 0 < yPoint < 0.8:
    xHorse = int(xHorse * 10)
    yHorse = int(yHorse * 10)
    xPoint = int(xPoint * 10)
    yPoint = int(yPoint * 10)
    print(f'Конь в клетке ({xHorse}, {yHorse}). Точка в клетке ({xPoint}, {yPoint}).')
    xAbs = math.fabs(xPoint - xHorse)
    yAbs = math.fabs(yPoint - yHorse)
    if (xAbs == 2 and yAbs == 1) or (xAbs == 1 and yAbs == 2):
        print('Да, конь может ходить в эту точку.')
    else:
        print('Нет, конь не может ходить в эту точку')
else:
    print('Местоположение коня или точки находятся вне поля')

# Задача 8. Часы
# Что нужно сделать
# С начала суток часовая стрелка повернулась на угол в α градусов. Определите, на какой угол повернулась
# минутная стрелка с начала последнего часа. Входные и выходные данные — действительные числа.
#
# При решении этой задачи нельзя пользоваться условными операторами и циклами.

alpha = float(input('Введите угол: '))

beta = (alpha % 30) * 360 / 30
print(f'Угол минутной стрелки: {beta}')

# Задача 9. Уравнение
# Что нужно сделать
# Даны действительные коэффициенты a, b, c при этом a≠0. Решите квадратное уравнение a∙x2+b∙x+c=0
# и выведите все его корни.
#
# Если уравнение имеет два корня, выведите два корня в порядке возрастания, если один корень —
# выведите одно число, если нет корней — не выводите ничего
import math
a = float(input('Введите a: '))
b = float(input('Введите b: '))
c = float(input('Введите c: '))
discriminant = b ** 2 - 4 * a * c
if discriminant > 0:
    x1 = (- b - math.sqrt(discriminant))/ 2 * a
    x2 = (- b + math.sqrt(discriminant))/ 2 * a
    if x1 > x2:
        print(f'Корни: {x2}, {x1}')
    else:
        print(f'Корни: {x1}, {x2}')
elif discriminant == 0:
    x = -b / 2 * a
    print(f'корень: {x}')
else:
    print('Нет корней')

# Задача 10. За что?
# Что нужно сделать
# Вы встретились со своим старым другом, который тоже изучает программирование, правда, в другом учебном заведении.
# За чашкой кофе он пожаловался вам, что сумасбродный препод дал им задание написать программу, которая из двух
# введённых чисел определяет наибольшее, не используя при этом условных операторов, циклов и встроенную функцию max.
# Радуясь, что на вашем курсе такого не требуют, вы всё-таки решаете помочь своему другу. Напишите для него эту
# программу.
first_number = int(input('Введите первое число: '))
second_number = int(input('Введите второе число: '))
absDifferent = math.fabs(first_number - second_number)
sumNumber = first_number + second_number
max_number = int((sumNumber + absDifferent) / 2)
print(f'Максимальное число: {max_number}')


