# Задача 1. Шифр Цезаря 2
#
# Мы уже писали программу, которая шифрует строку с помощью шифра Цезаря. Напомним, что в таком способе шифрования
# каждая буква заменяется на следующую по алфавиту через K позиций по кругу.
#
# Напишите (модифицируйте) программу, которая реализует этот алгоритм шифрования. Не используйте конкатенацию и
# сделайте так, чтобы текст был в одном регистре.

def get_letter(letter, shift):
    return alphabet[(alphabet.index(letter) + shift) % 32]

alphabet = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
text = input('Введите текст: ').lower()
shift = int(input('Сдвиг: '))

new_text = ''.join([(get_letter(letter, shift) if letter in alphabet else letter) for letter in text])

print(f'Зашифрованный текст: {new_text}')

# Задача 2. Путь к файлу
#
# Все данные сайта лежат в одном проекте. При написании кода, внутри этого проекта часто используются абсолютные пути
# файлов, которые необходимо проверять.
#
# Пользователь вводит абсолютный путь к текстовому файлу, а также проверяемые данные: диск и расширение файла.
# Напишите программу, которая проверяет корректность этого пути.
#
#
# Пример:
# Путь к файлу: C:/user/docs/folder/new_file.txt
# На каком диске должен лежать файл: C
# Требуемое расширение файла: .txt
# Путь корректен!

path = input('Путь к файлу: ')
disk = input('На каком диске должен лежать файл: ')
ext = input('Требуемое расширение файла: ')

if path.startswith(disk) and path.endswith(ext):
    print('Путь корректен!')
else:
    print('Путь указан некорректно!')

# Задача 3. Удаление части
#
# На вход в программу подаётся строка, состоящая из прописных и заглавных букв кириллицы. Напишите код, который
# проверяет, каких букв в строке больше, прописных или заглавных. Если заглавных букв больше, то сделать все
# буквы строки заглавными, иначе сделать все прописными.
#
# Подсказка: используйте методы islower() и/или isupper().

text = input('Введите строку: ')
count_lower = 0
count_upper = 0

for letter in text:
    if letter.islower():
        count_lower += 1
    elif letter.isupper():
        count_upper += 1

if count_upper > count_lower:
    print(text.upper())
else:
    print(text.lower())