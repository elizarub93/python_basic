# Задача 1. Улучшенная лингвистика 2
#
# Усовершенствуйте старую программу:
# У нас есть список из трёх слов, которые вводит пользователь. Затем вводится сам текст произведения, который
# вводится уже в одну строку. Напишите программу, которая посчитает, сколько раз слова пользователя встречаются в тексте.

words = input('Введите слова через запятую: ').split(', ')
text = input('Введите текст: ').split()
words_count = []

for word in words:
    words_count.append(text.count(word))

for i_w in range(len(words)):
    print('{word} : {word_count}'.format(word = words[i_w], word_count = words_count[i_w]))

# Задача 2. Бабушка
# У одной бабушки, когда та переписывается с внуком, постоянно залипает кнопка пробела. В итоге между словами
# получаются огромные расстояния. Внук не знает как это поправить в самом телефоне, поэтому обратился к вам за помощью.
#
# Пользователь вводит строку. Напишите программу, которая преобразовывает в этой строке все идущие подряд пробелы
# в один и выводит результат на экран.

grandma_text = input('Введите текст: ').split()
print(f'Исправленный текст: {' '.join(grandma_text)}')

# Задача 3. Разделители символов
#
# Человек хочет сделать рассылку поздравлений для определённого списка людей. Поздравления для разных людей он
# хочет написать по-разному.
#
# Напишите программу, которая запрашивает у пользователя:
# Шаблон поздравления (туда вставляется ФИ и возраст)
# ФИ людей (в одну строку, разделяются запятой)
# Возраст каждого человека (в одну строку через пробел)
# В конце  программа выводит поздравления и всех именинников в одну строку вместе с их возрастом.

while True:
    template_birth = input('Введите шаблон поздравления, в шаблоне можно использовать конструкцию {name} и {age}: ')
    if '{name}' in template_birth and '{age}' in template_birth:
        break
    print('Ошибка: отсутствуют одна или две конструкции')

names_list = input('Введите ФИ через запятую: ').split(', ')
ages = input('Введите возраст, через пробел: ').split()
ages_list = [int(age) for age in ages]

for i_n in range(len(names_list)):
    print(template_birth.format(name=names_list[i_n], age=ages_list[i_n]))

birth_list = [
    ' '.join([names_list[i_p], str(ages_list[i_p])]) for i_p in range(len(names_list))
]

print(', '.join(birth_list))

