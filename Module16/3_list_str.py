# Задача 1. Текстовый редактор: возвращение
# Мы продолжаем участвовать в разработке нового текстового редактора и делать жизнь обычных пользователей чуть лучше.
# В этот раз у нас стоит задача сделать фишку с поиском и заменой символов в выделенной строчке. Например, человек
# что-то перечислял в тексте, но ошибся и вместо точек с запятой использовал двоеточия. Лингвисты негодуют.
#
# Пользователь вводит строку S. Напишите программу, которая заменяет в строке все двоеточия (:) на точки с запятой
# (;). Также подсчитайте количество замен и выведите ответ на экран (и новую строку тоже). Для решения используйте
# список.

text = input('Введите строку: ')
text_list = list(text)
new_list = []
count_replace = 0

for let in text_list:
    if let == ':':
        let = ';'
        count_replace += 1
    new_list.append(let)

print('Исправленная строка: ', end='')
for let in new_list:
    print(let, end='')

print(f'\nКол-во замен: {count_replace}')

# Задача 2. Соседи
# Дана строка S и номер позиции символа в строке. Напишите программу, которая выводит соседей этого символа и
# сообщение о количестве таких же символов среди этих соседей: их нет, есть ровно один или есть два таких же.

text = input('Введите строку: ')
num_symbol = int(input('Номер символа:'))

text_list = list(text)
left_symbol = text_list[num_symbol - 2]
right_symbol = text_list[num_symbol]
print(f'Символ слева: {left_symbol}')
print(f'Символ справа: {right_symbol}')

if text_list[num_symbol - 1] == left_symbol and text_list[num_symbol - 1] == left_symbol:
    print('Есть ровно два таких же символа.')
elif text_list[num_symbol - 1] == left_symbol or text_list[num_symbol - 1] == left_symbol:
    print('Есть ровно один такой же символ.')
else:
    print('Таких же символов нет.')


# Задача 3. Улучшенная лингвистика
# Мы уже писали программу для лингвистов, которая считала количество определённых букв в тексте. Теперь эту программу
# нужно улучшить. Есть список из трёх слов, которые вводит пользователь. Затем вводится сам текст произведения строго
# по словам. Текст вводится до тех пор, пока не встретится слово end. Напишите программу, которая посчитает, сколько
# раз слова пользователя встречаются в тексте.
list_word = []
count_word = [0, 0, 0]

for index in range(3):
    word = input(f'Введите {index + 1} слово: ')
    list_word.append(word)

word_text = input('Слово из текста: ')

while word_text != 'end':
    for index in range(3):
        if list_word[index] == word_text:
            count_word[index] += 1
    word_text = input('Слово из текста: ')

print('\nПодсчёт слов в тексте')
for index in range(3):
    print(f'{list_word[index]} : {count_word[index]}')
